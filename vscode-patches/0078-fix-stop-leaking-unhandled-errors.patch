From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lo=C3=AFc=20Mangeonjean?= <loic@coderpad.io>
Date: Mon, 11 Aug 2025 15:33:43 +0200
Subject: [PATCH] fix: stop leaking unhandled errors

---
 .../wordHighlighter/browser/wordHighlighter.ts       | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts b/src/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts
index a0d0dac11e6..c717a5b2259 100644
--- a/src/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts
+++ b/src/vs/editor/contrib/wordHighlighter/browser/wordHighlighter.ts
@@ -272,7 +272,9 @@ class WordHighlighter {
 				return;
 			}
 
-			this.runDelayer.trigger(() => { this._onPositionChanged(e); });
+			this.runDelayer.trigger(() => { this._onPositionChanged(e); }).catch(err => {
+				// ignore abort error
+			});
 		}));
 		this.toUnhook.add(editor.onDidFocusEditorText((e) => {
 			if (this.occurrencesHighlightEnablement === 'off') {
@@ -281,7 +283,9 @@ class WordHighlighter {
 			}
 
 			if (!this.workerRequest) {
-				this.runDelayer.trigger(() => { this._run(); });
+				this.runDelayer.trigger(() => { this._run(); }).catch(err => {
+					// ignore abort error
+				});
 			}
 		}));
 		this.toUnhook.add(editor.onDidChangeModelContent((e) => {
@@ -364,7 +368,9 @@ class WordHighlighter {
 		}
 
 		this.runDelayer.cancel();
-		this.runDelayer.trigger(() => { this._run(false, delay); });
+		this.runDelayer.trigger(() => { this._run(false, delay); }).catch(err => {
+			// ignore abort error
+		});
 	}
 
 	public trigger() {

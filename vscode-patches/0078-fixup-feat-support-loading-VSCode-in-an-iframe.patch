From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lo=C3=AFc=20Mangeonjean?= <loic@coderpad.io>
Date: Mon, 11 Aug 2025 08:43:30 +0200
Subject: [PATCH] fixup! feat: support loading VSCode in an iframe

---
 src/vs/workbench/browser/window.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/vs/workbench/browser/window.ts b/src/vs/workbench/browser/window.ts
index 74ed21bbfeb..44678fae826 100644
--- a/src/vs/workbench/browser/window.ts
+++ b/src/vs/workbench/browser/window.ts
@@ -111,7 +111,7 @@ export abstract class BaseWindow extends Disposable {
 
 		function getOverridenWindow(targetWindow: Window) {
 			if (targetWindow === mainWindow) {
-				// If running inside an iframe, do not override the `setTimeout` function on the
+				// If running inside an iframe, do not override the `setTimeout` function on the main frame
 				// eslint-disable-next-line no-restricted-globals
 				return window;
 			}
@@ -167,7 +167,7 @@ export abstract class BaseWindow extends Disposable {
 			return timeoutHandle;
 		};
 
-		targetWindow.clearTimeout = function (this: unknown, timeoutHandle: number | undefined): void {
+		getOverridenWindow(targetWindow).clearTimeout = function (this: unknown, timeoutHandle: number | undefined): void {
 			const timeoutDisposables = typeof timeoutHandle === 'number' ? BaseWindow.TIMEOUT_DISPOSABLES.get(timeoutHandle) : undefined;
 			if (timeoutDisposables) {
 				dispose(timeoutDisposables);

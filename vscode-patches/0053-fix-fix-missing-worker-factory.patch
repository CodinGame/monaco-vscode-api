From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lo=C3=AFc=20Mangeonjean?= <loic@coderpad.io>
Date: Tue, 29 Oct 2024 12:00:15 +0100
Subject: [PATCH] fix: fix missing worker factory

---
 .../common/services/editorSimpleWorkerMain.ts     |  5 +----
 .../common/services/editorWorkerBootstrap.ts      | 15 +++------------
 2 files changed, 4 insertions(+), 16 deletions(-)

diff --git a/src/vs/editor/common/services/editorSimpleWorkerMain.ts b/src/vs/editor/common/services/editorSimpleWorkerMain.ts
index 8d0e18738f4..795f00d68c3 100644
--- a/src/vs/editor/common/services/editorSimpleWorkerMain.ts
+++ b/src/vs/editor/common/services/editorSimpleWorkerMain.ts
@@ -3,7 +3,4 @@
  *  Licensed under the MIT License. See License.txt in the project root for license information.
  *--------------------------------------------------------------------------------------------*/
 
-import { create } from './editorSimpleWorker.js';
-import { bootstrapSimpleEditorWorker } from './editorWorkerBootstrap.js';
-
-bootstrapSimpleEditorWorker(create);
+import './editorWorkerBootstrap.js';
diff --git a/src/vs/editor/common/services/editorWorkerBootstrap.ts b/src/vs/editor/common/services/editorWorkerBootstrap.ts
index f754fe8fd4a..27bb817ac9b 100644
--- a/src/vs/editor/common/services/editorWorkerBootstrap.ts
+++ b/src/vs/editor/common/services/editorWorkerBootstrap.ts
@@ -4,7 +4,7 @@
  *--------------------------------------------------------------------------------------------*/
 
 import { IWorkerServer, SimpleWorkerServer } from '../../../base/common/worker/simpleWorker.js';
-import { EditorSimpleWorker } from './editorSimpleWorker.js';
+import { EditorSimpleWorker, IForeignModuleFactory } from './editorSimpleWorker.js';
 import { EditorWorkerHost } from './editorWorkerHost.js';
 
 type MessageEvent = {
@@ -18,7 +18,7 @@ declare const globalThis: {
 
 let initialized = false;
 
-export function initialize(factory: any) {
+export function initialize(factory: IForeignModuleFactory | null) {
 	if (initialized) {
 		return;
 	}
@@ -26,7 +26,7 @@ export function initialize(factory: any) {
 
 	const simpleWorker = new SimpleWorkerServer((msg) => {
 		globalThis.postMessage(msg);
-	}, (workerServer: IWorkerServer) => new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), null));
+	}, (workerServer: IWorkerServer) => new EditorSimpleWorker(EditorWorkerHost.getChannel(workerServer), factory));
 
 	globalThis.onmessage = (e: MessageEvent) => {
 		simpleWorker.onmessage(e.data);
@@ -40,12 +40,3 @@ globalThis.onmessage = (e: MessageEvent) => {
 	}
 };
 
-type CreateFunction<C, D, R = any> = (ctx: C, data: D) => R;
-
-export function bootstrapSimpleEditorWorker<C, D, R>(createFn: CreateFunction<C, D, R>) {
-	globalThis.onmessage = () => {
-		initialize((ctx: C, createData: D) => {
-			return createFn.call(self, ctx, createData);
-		});
-	};
-}

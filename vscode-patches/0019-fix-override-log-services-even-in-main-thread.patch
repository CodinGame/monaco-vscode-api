From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lo=C3=AFc=20Mangeonjean?= <loic@coderpad.io>
Date: Mon, 11 Mar 2024 17:46:45 +0100
Subject: [PATCH] fix: override log services even in main thread

---
 src/vs/workbench/api/common/extensionHostMain.ts       | 7 ++++++-
 src/vs/workbench/api/worker/extHost.worker.services.ts | 3 ---
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/vs/workbench/api/common/extensionHostMain.ts b/src/vs/workbench/api/common/extensionHostMain.ts
index 23807ec1b5c..279ba32a63b 100644
--- a/src/vs/workbench/api/common/extensionHostMain.ts
+++ b/src/vs/workbench/api/common/extensionHostMain.ts
@@ -12,7 +12,7 @@ import { MainContext, MainThreadConsoleShape } from './extHost.protocol.js';
 import { IExtensionHostInitData } from '../../services/extensions/common/extensionHostProtocol.js';
 import { RPCProtocol } from '../../services/extensions/common/rpcProtocol.js';
 import { ExtensionError, ExtensionIdentifier, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';
-import { ILogService } from '../../../platform/log/common/log.js';
+import { ILoggerService, ILogService } from '../../../platform/log/common/log.js';
 import { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';
 import { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';
 import { IExtHostInitDataService } from './extHostInitDataService.js';
@@ -24,6 +24,9 @@ import { IExtHostExtensionService, IHostUtils } from './extHostExtensionService.
 import { IExtHostTelemetry } from './extHostTelemetry.js';
 import { Mutable } from '../../../base/common/types.js';
 import { isWebWorker } from '../../../base/common/platform.js';
+import { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';
+import { ExtHostLoggerService } from './extHostLoggerService.js';
+import { ExtHostLogService } from './extHostLogService.js';
 
 export interface IExitFn {
 	(code?: number): any;
@@ -168,6 +171,8 @@ export class ExtensionHostMain {
 		services.set(IExtHostRpcService, new ExtHostRpcService(this._rpcProtocol));
 		services.set(IURITransformerService, new URITransformerService(uriTransformer));
 		services.set(IHostUtils, hostUtils);
+		services.set(ILogService, new SyncDescriptor(ExtHostLogService, [true], true));
+		services.set(ILoggerService, new SyncDescriptor(ExtHostLoggerService, [], true));
 
 		const instaService: IInstantiationService = new InstantiationService(services, true);
 
diff --git a/src/vs/workbench/api/worker/extHost.worker.services.ts b/src/vs/workbench/api/worker/extHost.worker.services.ts
index 797ebc4a065..8b414666da5 100644
--- a/src/vs/workbench/api/worker/extHost.worker.services.ts
+++ b/src/vs/workbench/api/worker/extHost.worker.services.ts
@@ -5,9 +5,7 @@
 
 import { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';
 import { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';
-import { ILogService } from '../../../platform/log/common/log.js';
 import { IExtHostExtensionService } from '../common/extHostExtensionService.js';
-import { ExtHostLogService } from '../common/extHostLogService.js';
 import { ExtensionStoragePaths, IExtensionStoragePaths } from '../common/extHostStoragePaths.js';
 import { ExtHostTelemetry, IExtHostTelemetry } from '../common/extHostTelemetry.js';
 import { ExtHostExtensionService } from './extHostExtensionService.js';
@@ -18,7 +16,6 @@ import { ExtHostExtensionService } from './extHostExtensionService.js';
 // ###                                                                   ###
 // #########################################################################
 
-registerSingleton(ILogService, new SyncDescriptor(ExtHostLogService, [true], true));
 registerSingleton(IExtHostExtensionService, ExtHostExtensionService, InstantiationType.Eager);
 registerSingleton(IExtensionStoragePaths, ExtensionStoragePaths, InstantiationType.Eager);
 registerSingleton(IExtHostTelemetry, new SyncDescriptor(ExtHostTelemetry, [true], true));

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gaspar Chefdeville <gaspar.chefdeville@coderpad.io>
Date: Wed, 9 Jul 2025 17:25:14 +0200
Subject: [PATCH] feat: prevent IDE from entering fullscreen if not occupying
 the entire screen

---
 src/vs/base/browser/dom.ts                           | 12 ++++++++----
 src/vs/workbench/browser/web.main.ts                 |  2 +-
 .../services/host/browser/browserHostService.ts      |  2 +-
 3 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/src/vs/base/browser/dom.ts b/src/vs/base/browser/dom.ts
index 90f89cab2e0..6169e138aab 100644
--- a/src/vs/base/browser/dom.ts
+++ b/src/vs/base/browser/dom.ts
@@ -1630,10 +1630,12 @@ export interface IDetectedFullscreen {
 	guess: boolean;
 }
 
-export function detectFullscreen(targetWindow: Window): IDetectedFullscreen | null {
+export function detectFullscreen(targetWindow: Window, containerElement: Element): IDetectedFullscreen | null {
 
 	// Browser fullscreen: use DOM APIs to detect
-	if (targetWindow.document.fullscreenElement || (<any>targetWindow.document).webkitFullscreenElement || (<any>targetWindow.document).webkitIsFullScreen) {
+	const fullscreenElement: Element | undefined =
+		targetWindow.document.fullscreenElement ?? (<any>targetWindow.document).webkitFullscreenElement ?? (<any>targetWindow.document).webkitIsFullScreen;
+	if (fullscreenElement === containerElement) {
 		return { mode: DetectedFullscreenMode.DOCUMENT, guess: false };
 	}
 
@@ -1642,7 +1644,9 @@ export function detectFullscreen(targetWindow: Window): IDetectedFullscreen | nu
 	// height and comparing that to window height, we can guess
 	// it though.
 
-	if (targetWindow.innerHeight === targetWindow.screen.height) {
+	const isContainerFullScreen = containerElement.getBoundingClientRect().height >= targetWindow.screen.height;
+
+	if (targetWindow.innerHeight === targetWindow.screen.height && isContainerFullScreen) {
 		// if the height of the window matches the screen height, we can
 		// safely assume that the browser is fullscreen because no browser
 		// chrome is taking height away (e.g. like toolbars).
@@ -1651,7 +1655,7 @@ export function detectFullscreen(targetWindow: Window): IDetectedFullscreen | nu
 
 	if (platform.isMacintosh || platform.isLinux) {
 		// macOS and Linux do not properly report `innerHeight`, only Windows does
-		if (targetWindow.outerHeight === targetWindow.screen.height && targetWindow.outerWidth === targetWindow.screen.width) {
+		if (targetWindow.outerHeight === targetWindow.screen.height && targetWindow.outerWidth === targetWindow.screen.width && isContainerFullScreen) {
 			// if the height of the browser matches the screen height, we can
 			// only guess that we are in fullscreen. It is also possible that
 			// the user has turned off taskbars in the OS and the browser is
diff --git a/src/vs/workbench/browser/web.main.ts b/src/vs/workbench/browser/web.main.ts
index 6d42eeaa3d4..f92f8f04f60 100644
--- a/src/vs/workbench/browser/web.main.ts
+++ b/src/vs/workbench/browser/web.main.ts
@@ -113,7 +113,7 @@ export class BrowserMain extends Disposable {
 	private init(): void {
 
 		// Browser config
-		setFullscreen(!!detectFullscreen(mainWindow), mainWindow);
+		setFullscreen(!!detectFullscreen(mainWindow, this.domElement), mainWindow);
 	}
 
 	async open(): Promise<IWorkbench> {
diff --git a/src/vs/workbench/services/host/browser/browserHostService.ts b/src/vs/workbench/services/host/browser/browserHostService.ts
index 6f62f49b906..d34518a241e 100644
--- a/src/vs/workbench/services/host/browser/browserHostService.ts
+++ b/src/vs/workbench/services/host/browser/browserHostService.ts
@@ -218,7 +218,7 @@ export class BrowserHostService extends Disposable implements IHostService {
 			const viewport = isIOS && window.visualViewport ? window.visualViewport /** Visual viewport */ : window /** Layout viewport */;
 
 			const isFullScreen = () => {
-				const fullScreen = detectFullscreen(window);
+				const fullScreen = detectFullscreen(window, this.layoutService.getContainer(window));
 				return fullScreen !== null && !fullScreen.guess;
 			};
 

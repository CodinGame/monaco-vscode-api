#!/bin/bash
set -e

dir_me=$(realpath $(dirname $0))
dir_base=$(realpath $dir_me/..)

vscodeRef=$(cat './node_modules/monaco-editor/package.json' | jq -r '.["vscodeRef"]')

monaco_esm_directory="`pwd`/node_modules/monaco-editor/esm"
output_directory="`pwd`/vscode"
extension_output_directory="`pwd`/vscode-default-extensions"
patch_file="`pwd`/scripts/vscode.patch"
editor_patch_file="`pwd`/monaco-editor-treemending.patch"
version_info=$output_directory/version.info

if [[ -e $version_info && $(cat $version_info) == $vscodeRef ]]; then
    echo "vscode version $vscodeRef is already installed. Aborting..."
    exit 0
else
    echo "vscode version $vscodeRef is not available. Installing..."
fi

rm -rf $output_directory

build_directory=`mktemp -d`
echo "Downloading vscode $vscodeRef in $build_directory..."

curl -L --max-redirs 5 https://github.com/Microsoft/vscode/tarball/$vscodeRef | tar -xz -C $build_directory --strip-components=1 microsoft-vscode-${vscodeRef:0:7}
vscodeVersion=$(cat "$build_directory/package.json" | jq -r '.["version"]')
cat <<< $(jq ".config.vscode.version = \"$vscodeVersion\"" package.json) > package.json

cd $build_directory

echo "Installing vscode dependencies..."
yarn install --ignore-scripts

echo "Patching vscode..."
patch -p1 < $patch_file

bash ${dir_me}/create-treemending-patch.sh $build_directory

# copy default extensions
rm -rf $extension_output_directory
cp -R extensions "$extension_output_directory"

# transform to relative imports, replace ESM comments and vs/css! imports
cat << EOF | node -
	require('./build/lib/standalone').createESMSourcesAndResources2({
		srcFolder: './src',
		outFolder: './src',
		outResourcesFolder: './resources',
		ignores: [
			'inlineEntryPoint:0.ts',
			'inlineEntryPoint:1.ts',
			'vs/loader.js',
			'vs/base/worker/workerMain.ts',
		],
		renames: {
			'vs/nls.mock.ts': 'vs/nls.ts'
		}
	});
EOF
cd resources
cp --parents $(find -name \*.js) ../src/
cd ..

cd src

# Remove useless files
rm -rf `find . -name '*.test.ts' -o -name 'test' -o -name 'electron-browser'`
rm -rf vs/code
rm -rf vs/server
rm *.js

mkdir -p $output_directory
echo $vscodeRef > $version_info

echo "Building vscode..."
npx tsc --declaration --importHelpers --module es2020 --preserveConstEnums --outDir "$output_directory/vs"
# Copy files that are already built
find ./vs \( -name '*.js' -o -name '*.d.ts' -o -name '*.css' -o -name '*.mp3' \) -exec rsync -R \{\} "$output_directory/" \;

echo "Cleaning..."
rm -rf $build_directory
